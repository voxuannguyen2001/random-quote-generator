{"version":3,"sources":["components/Quote.js","colors.js","App.js","reportWebVitals.js","index.js"],"names":["Quote","quote","mainColor","getNewQuote","fadeDuration","fadeState","content","author","backgroundTransition","backgroundColor","transition","colorTransition","color","fadeTransition","className","style","icon","faQuoteLeft","onClick","url","encodeURI","console","log","window","open","focus","faTwitter","FB","ui","display","method","hashTag","href","response","faFacebookF","COLORS","App","useState","quoteArray","setQuoteArray","setQuote","setFadeState","setFadeTransition","setColor","useEffect","pageMax","Math","floor","totalQuote","page","random","getQuoteData","a","fetch","then","res","json","data","results","catch","err","alert","length","timeOutId","setTimeout","FADE_DURATION","randomColor","clearTimeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebbfd8c2.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome' \nimport { faQuoteLeft } from '@fortawesome/free-solid-svg-icons'\nimport { faTwitter, faFacebookF } from '@fortawesome/free-brands-svg-icons'\n\nconst Quote = ({ quote, mainColor, getNewQuote, fadeDuration, fadeState }) => {\n  const {content, author} = quote\n\n  const backgroundTransition = {\n    backgroundColor: mainColor,\n    transition: `background-color ${fadeDuration}ms ease-out`\n  }\n  const colorTransition = {\n    color: mainColor,\n    transition: `color ${fadeDuration}ms ease-out`\n  }\n\n  const fadeTransition = {\n    color: mainColor,\n    transition: `color ${fadeDuration}ms ease-out, opacity ${fadeDuration/2}ms ease-out` \n  }\n  const fbShareBtn = () => {\n    window.FB.ui({\n      display: 'popup',\n      method: 'share',\n      hashTag: '#randomquotes',\n      quote: `${content}\\n-${author}`,\n      href: 'https://voxuannguyen2001.github.io/random-quote-generator/'\n    }, function(response){});\n  }\n\n  const twitterTweetBtn = () => {\n    const url ='https://twitter.com/intent/tweet?text=' + encodeURI(`${(content)}\\n-${author}}`)\n    console.log(url)\n    window.open(url, '_blank').focus()\n  }\n\n  return (\n    <div className='container' style={backgroundTransition}>\n      <div className='quote-box'> \n        <div \n          className={`quote-wrapper fade-wrapper ${fadeState}`} \n          style={fadeTransition} > \n          <FontAwesomeIcon className='quote-icon' icon={faQuoteLeft}/>\n          {content}\n          <div className='quote-author' style={colorTransition}>- {author}</div>\n        </div>\n        <div className='quote-btn'>\n          <ul className='share-container'>\n            <li style={backgroundTransition} onClick={twitterTweetBtn}>\n              <FontAwesomeIcon icon={faTwitter} className='share-btn'/>\n            </li>\n            <li style={backgroundTransition} onClick={fbShareBtn}>\n              <FontAwesomeIcon icon={faFacebookF} className='share-btn'/> \n            </li>\n          </ul>\n          <button style={backgroundTransition} className='new-quote-btn' onClick={getNewQuote}>New quote</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Quote\n","const COLORS = [\n\"#16a085\",\n\"#27ae60\",\n\"#2c3e50\",\n\"#f39c12\",\n\"#e74c3c\",\n\"#9b59b6\",\n\"#FB6964\",\n\"#342224\",\n\"#472E32\",\n\"#BDBB99\",\n\"#77B1A9\",\n\"#73A857\"\n]\nexport default COLORS","import React, {useState, useEffect} from 'react'\nimport Quote from './components/Quote'\nimport COLORS from './colors'\n\nconst App = () => {\n  const [quoteArray, setQuoteArray] = useState([])\n  const [quote, setQuote] = useState({\n    content: '',\n    author: ''\n  })\n  const [fadeState, setFadeState] = useState('fade-in')\n  const [fadeTransition, setFadeTransition] = useState(null)\n  const [color, setColor] = useState('')\n  const FADE_DURATION = 1000\n\n  useEffect(() => {\n    const quoteLimit = 20\n    const totalQuote = 2000\n    const pageMax = Math.floor(totalQuote / quoteLimit)\n    const page = Math.floor(Math.random() * (pageMax)) + 1\n\n    const getQuoteData = async() => {\n      fetch(`https://api.quotable.io/quotes?limit=${quoteLimit}&page=${page}`)\n      .then(res => res.json())\n      .then(data => {\n        setQuoteArray(data.results)\n      })\n      .catch(err => alert(\"Internet connection error\"))\n    }\n    getQuoteData()\n  }, [])\n\n  useEffect(() => {\n    getNewQuote();\n  }, [quoteArray])\n\n  const getNewQuote = () => {\n    if (quoteArray.length === 0) \n      return;\n    const timeOutId = setTimeout(() => {\n      const {content, author} = quoteArray[Math.floor(Math.random() * quoteArray.length)]\n      setQuote({\n        content,\n        author\n      })\n      setFadeState('fade-in')\n      setFadeTransition(null)\n    }, FADE_DURATION/2)\n\n\n    const randomColor = COLORS[Math.floor(Math.random() * COLORS.length)]\n    setColor(randomColor)\n\n    clearTimeout(fadeTransition)\n    setFadeTransition(timeOutId)\n    setFadeState('fade-out')\n  }\n\n  return (\n    <Quote\n      quote={quote} mainColor={color} \n      getNewQuote={getNewQuote} \n      fadeDuration={FADE_DURATION}\n      fadeState={fadeState}\n    />\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/style.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}